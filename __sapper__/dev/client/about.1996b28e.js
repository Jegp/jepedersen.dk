import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, a as space, e as element, t as text, q as query_selector_all, h as detach_dev, f as claim_space, c as claim_element, b as children, g as claim_text, j as attr_dev, k as add_location, l as insert_dev, m as append_dev, o as noop } from './client.a08fa515.js';

/* src/routes/about.svelte generated by Svelte v3.18.1 */

const file = "src/routes/about.svelte";

function create_fragment(ctx) {
	let t0;
	let figure;
	let img;
	let img_src_value;
	let t1;
	let figcaption;
	let t2;
	let a0;
	let t3;
	let t4;
	let t5;
	let section;
	let h1;
	let t6;
	let t7;
	let p0;
	let t8;
	let a1;
	let t9;
	let t10;
	let t11;
	let p1;
	let t12;
	let a2;
	let t13;
	let t14;
	let a3;
	let t15;
	let t16;

	const block = {
		c: function create() {
			t0 = space();
			figure = element("figure");
			img = element("img");
			t1 = space();
			figcaption = element("figcaption");
			t2 = text("Foto by ");
			a0 = element("a");
			t3 = text("Kevin Lee");
			t4 = text(".");
			t5 = space();
			section = element("section");
			h1 = element("h1");
			t6 = text("About");
			t7 = space();
			p0 = element("p");
			t8 = text("Jens Egholm Pedersen is a doctoral student at the\n\t");
			a1 = element("a");
			t9 = text("Royal Institute of Technology (KTH)");
			t10 = text(".\n\t\n\tHe is currently working on cognitive circuits, neuromorphic computing and robots.");
			t11 = space();
			p1 = element("p");
			t12 = text("Find him on ");
			a2 = element("a");
			t13 = text("Twitter");
			t14 = text(" \n\tor\n\t");
			a3 = element("a");
			t15 = text("GitHub");
			t16 = text(".");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1ine71f\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			figure = claim_element(nodes, "FIGURE", { class: true });
			var figure_nodes = children(figure);

			img = claim_element(figure_nodes, "IMG", {
				src: true,
				alt: true,
				width: true,
				class: true
			});

			t1 = claim_space(figure_nodes);
			figcaption = claim_element(figure_nodes, "FIGCAPTION", { class: true });
			var figcaption_nodes = children(figcaption);
			t2 = claim_text(figcaption_nodes, "Foto by ");
			a0 = claim_element(figcaption_nodes, "A", { href: true, title: true });
			var a0_nodes = children(a0);
			t3 = claim_text(a0_nodes, "Kevin Lee");
			a0_nodes.forEach(detach_dev);
			t4 = claim_text(figcaption_nodes, ".");
			figcaption_nodes.forEach(detach_dev);
			figure_nodes.forEach(detach_dev);
			t5 = claim_space(nodes);
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			h1 = claim_element(section_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t6 = claim_text(h1_nodes, "About");
			h1_nodes.forEach(detach_dev);
			t7 = claim_space(section_nodes);
			p0 = claim_element(section_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t8 = claim_text(p0_nodes, "Jens Egholm Pedersen is a doctoral student at the\n\t");
			a1 = claim_element(p0_nodes, "A", { href: true, title: true });
			var a1_nodes = children(a1);
			t9 = claim_text(a1_nodes, "Royal Institute of Technology (KTH)");
			a1_nodes.forEach(detach_dev);
			t10 = claim_text(p0_nodes, ".\n\t\n\tHe is currently working on cognitive circuits, neuromorphic computing and robots.");
			p0_nodes.forEach(detach_dev);
			t11 = claim_space(section_nodes);
			p1 = claim_element(section_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t12 = claim_text(p1_nodes, "Find him on ");
			a2 = claim_element(p1_nodes, "A", { href: true, title: true });
			var a2_nodes = children(a2);
			t13 = claim_text(a2_nodes, "Twitter");
			a2_nodes.forEach(detach_dev);
			t14 = claim_text(p1_nodes, " \n\tor\n\t");
			a3 = claim_element(p1_nodes, "A", { href: true, title: true });
			var a3_nodes = children(a3);
			t15 = claim_text(a3_nodes, "GitHub");
			a3_nodes.forEach(detach_dev);
			t16 = claim_text(p1_nodes, ".");
			p1_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "About";
			if (img.src !== (img_src_value = "./jens.png")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "");
			attr_dev(img, "width", "300");
			attr_dev(img, "class", "svelte-h8bilc");
			add_location(img, file, 5, 1, 62);
			attr_dev(a0, "href", "https://www.linkedin.com/in/kevlee1/");
			attr_dev(a0, "title", "Taken in Spain, 2019");
			add_location(a0, file, 7, 11, 132);
			attr_dev(figcaption, "class", "svelte-h8bilc");
			add_location(figcaption, file, 6, 2, 108);
			attr_dev(figure, "class", "svelte-h8bilc");
			add_location(figure, file, 4, 0, 52);
			attr_dev(h1, "class", "svelte-h8bilc");
			add_location(h1, file, 13, 1, 278);
			attr_dev(a1, "href", "https://www.kth.se/profile/jeped/");
			attr_dev(a1, "title", "KTH");
			add_location(a1, file, 15, 1, 348);
			attr_dev(p0, "class", "svelte-h8bilc");
			add_location(p0, file, 14, 1, 294);
			attr_dev(a2, "href", "https://twitter.com/jensegholm");
			attr_dev(a2, "title", "Twitter");
			add_location(a2, file, 20, 13, 554);
			attr_dev(a3, "href", "https://github.com/jegp/");
			attr_dev(a3, "title", "GitHub");
			add_location(a3, file, 22, 1, 629);
			attr_dev(p1, "class", "svelte-h8bilc");
			add_location(p1, file, 19, 1, 537);
			attr_dev(section, "class", "content svelte-h8bilc");
			add_location(section, file, 12, 0, 251);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, figure, anchor);
			append_dev(figure, img);
			append_dev(figure, t1);
			append_dev(figure, figcaption);
			append_dev(figcaption, t2);
			append_dev(figcaption, a0);
			append_dev(a0, t3);
			append_dev(figcaption, t4);
			insert_dev(target, t5, anchor);
			insert_dev(target, section, anchor);
			append_dev(section, h1);
			append_dev(h1, t6);
			append_dev(section, t7);
			append_dev(section, p0);
			append_dev(p0, t8);
			append_dev(p0, a1);
			append_dev(a1, t9);
			append_dev(p0, t10);
			append_dev(section, t11);
			append_dev(section, p1);
			append_dev(p1, t12);
			append_dev(p1, a2);
			append_dev(a2, t13);
			append_dev(p1, t14);
			append_dev(p1, a3);
			append_dev(a3, t15);
			append_dev(p1, t16);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(figure);
			if (detaching) detach_dev(t5);
			if (detaching) detach_dev(section);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function preload({ params, query }) {
	return;
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About",
			options,
			id: create_fragment.name
		});
	}
}

export default About;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJvdXQuMTk5NmIyOGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvYWJvdXQuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPkFib3V0PC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxmaWd1cmU+XG5cdDxpbWcgc3JjPVwiLi9qZW5zLnBuZ1wiIGFsdD1cIlwiIHdpZHRoPVwiMzAwXCIgLz5cblx0XHQ8ZmlnY2FwdGlvbj5cblx0XHRcdEZvdG8gYnkgPGEgaHJlZj1cImh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9pbi9rZXZsZWUxL1wiIHRpdGxlPVwiVGFrZW4gaW4gU3BhaW4sIDIwMTlcIj5LZXZpbiBMZWU8L2E+LlxuXHRcdDwvZmlnY2FwdGlvbj5cbjwvZmlndXJlPlxuXG5cbjxzZWN0aW9uIGNsYXNzPSdjb250ZW50Jz5cblx0PGgxPkFib3V0PC9oMT5cblx0PHA+SmVucyBFZ2hvbG0gUGVkZXJzZW4gaXMgYSBkb2N0b3JhbCBzdHVkZW50IGF0IHRoZVxuXHQ8YSBocmVmPVwiaHR0cHM6Ly93d3cua3RoLnNlL3Byb2ZpbGUvamVwZWQvXCIgdGl0bGU9XCJLVEhcIj5Sb3lhbCBJbnN0aXR1dGUgb2YgVGVjaG5vbG9neSAoS1RIKTwvYT4uXG5cdFxuXHRIZSBpcyBjdXJyZW50bHkgd29ya2luZyBvbiBjb2duaXRpdmUgY2lyY3VpdHMsIG5ldXJvbW9ycGhpYyBjb21wdXRpbmcgYW5kIHJvYm90cy5cblx0PC9wPlxuXHQ8cD5cblx0RmluZCBoaW0gb24gPGEgaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vamVuc2VnaG9sbVwiIHRpdGxlPVwiVHdpdHRlclwiPlR3aXR0ZXI8L2E+IFxuXHRvclxuXHQ8YSBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL2plZ3AvXCIgdGl0bGU9XCJHaXRIdWJcIj5HaXRIdWI8L2E+LlxuXHQ8L3A+XG48L3NlY3Rpb24+XG5cbjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxuXHRleHBvcnQgYXN5bmMgZnVuY3Rpb24gcHJlbG9hZCh7IHBhcmFtcywgcXVlcnkgfSkge1xuXHRcdHJldHVybjtcblx0fVxuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cbi5jb250ZW50IHtcblx0bWF4LXdpZHRoOiA1NmVtO1xuXHRwYWRkaW5nOiAxZW0gMmVtIDJlbTtcblx0bWFyZ2luOiAwIGF1dG87XG5cdHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbmZpZ3VyZSB7XG5cdG1hcmdpbjogMCBhdXRvO1xufVxuXG5maWd1cmUgaW1nIHtcblx0aGVpZ2h0OiBhdXRvO1xuXHRtYXgtaGVpZ2h0OiA1MTJweDtcblx0bWF4LXdpZHRoOiAxMDAlO1xufVxuXG5maWdjYXB0aW9uIHtcblx0ZGlzcGxheTogYmxvY2s7XG5cdGZvbnQtc2l6ZTogLjg3NWVtO1xuXHRmb250LXN0eWxlOiBpdGFsaWM7XG5cdGxpbmUtaGVpZ2h0OiAyLjVlbTtcblx0cGFkZGluZzogMCAxZW07XG59XG5cbmgxIHtcblx0bWFyZ2luOiAxZW0gMCAuMjVlbTtcbn1cblxuaDEsXG5wIHtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xufVxuPC9zdHlsZT4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBQ3VCLE9BQU8sR0FBRyxNQUFNLEVBQUUsS0FBSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
